<%- include('partials/header') %>

<section class="auth auth-login py-5">
  <div class="container" style="max-width: 520px;">
    <div class="card shadow-sm border-0" style="border-radius: 12px; overflow: hidden;">
      <div class="card-header text-center" style="background: var(--brand-red); color: #fff;">
        <h2 class="my-2" style="font-size: 1.5rem; letter-spacing: .02em;">Admin Login</h2>
      </div>
      <div class="card-body p-4" style="background: #fff;">
        <form id="loginForm" novalidate>
          <div class="mb-3">
            <label for="identifier" class="form-label">Email or Username</label>
            <input type="text" class="form-control" id="identifier" name="identifier" placeholder="you@example.com or admin" autocomplete="username" required />
          </div>

          <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <div class="input-group">
              <input type="password" class="form-control" id="password" name="password" placeholder="••••••••" autocomplete="current-password" required />
              <button class="btn" type="button" id="togglePassword" aria-label="Show password" style="background: var(--brand-red); color: #fff;">
                <span id="eyeIcon" aria-hidden="true">Show</span>
              </button>
            </div>
          </div>

          <div class="d-grid gap-2">
            <button type="submit" class="btn btn-lg" style="background: var(--brand-red); color: #fff;">Sign In</button>
          </div>
          <div id="loginError" class="mt-3" role="alert" style="display:none; color: var(--brand-red);"></div>
        </form>
      </div>
    </div>
  </div>
</section>

<style>
  /* Page-scoped auth UI polish */
  .auth-login .form-label { font-weight: 600; }
  .auth-login .form-control:focus { box-shadow: 0 0 0 .2rem rgba(220, 53, 69, .25); border-color: var(--brand-red); }
  .auth-login .btn:hover { filter: brightness(0.95); }
</style>

<script>
  (function(){
    const form = document.getElementById('loginForm');
    const errEl = document.getElementById('loginError');
    const toggle = document.getElementById('togglePassword');
    const pwd = document.getElementById('password');
    const eye = document.getElementById('eyeIcon');

    toggle.addEventListener('click', function(){
      const isPw = pwd.type === 'password';
      pwd.type = isPw ? 'text' : 'password';
      toggle.setAttribute('aria-label', isPw ? 'Hide password' : 'Show password');
      eye.textContent = isPw ? 'Hide' : 'Show';
    });

    form.addEventListener('submit', async function(e){
      e.preventDefault();
      errEl.style.display = 'none';
      const identifier = (document.getElementById('identifier').value || '').trim();
      const password = (document.getElementById('password').value || '');
      const payload = { identifier, password };
      try {
        const res = await fetch('/api/auth/login', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        });
        if (!res.ok) {
          const data = await res.json().catch(()=>({error:'Login failed'}));
          errEl.textContent = data.error || 'Login failed';
          errEl.style.display = 'block';
          return;
        }
        // On success, redirect to /dashboard
        window.location.href = '/dashboard';
      } catch (err) {
        errEl.textContent = 'Network error. Please try again.';
        errEl.style.display = 'block';
      }
    });
  })();
</script>

<%- include('partials/footer') %>
